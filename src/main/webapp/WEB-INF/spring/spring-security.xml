<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		

 
    
    <!--
    <http auto-config="true" use-expressions="true" access-denied-page="/app/security/demo/denied" >
        
                <sec:intercept-url pattern="/*" access="permitAll"/>
                <sec:intercept-url pattern="/app/security/demo/admin" access="hasRole('ROLE_ADMIN')"/>
                 
                
                <form-login 
                                login-page="/app/security/demo/home?message=Please+login+for+admin+access" 
                                authentication-failure-url="/app/security/demo/home?message=Username+or+password+incorrect" 
                                default-target-url="/app/security/demo/admin"/>
                
                <logout 
                                invalidate-session="true" 
                                logout-success-url="/app/security/demo/home?message=Logout+successful"
                                logout-url="/app/security/demo/logout"/>
                                
          </http>
             <oauth:rest-template id="oauthRestTemplate" resource="butkecResource" />
    -->
    
 
 
    <!-- Get a basic Spring Security provided form based login infra -->
    <sec:http auto-config="true" use-expressions="true">

        <sec:intercept-url pattern="/login" access="permitAll" />
        <sec:intercept-url pattern="/loginPage" access="permitAll" />
        <sec:intercept-url pattern="/logout" access="permitAll" />
        <sec:intercept-url pattern="/logoutPage" access="permitAll" />
        <!-- Requests to secured pages need to be authenticated and authorized -->
        <sec:intercept-url pattern="/secured/*"
                       access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
        <!-- Define the security form login and logout pages/urls -->
                
        <sec:form-login  login-processing-url="/login" login-page="/loginPage"
                     username-parameter="username" password-parameter="password"
                     default-target-url="/secured/securedSample"
                     authentication-failure-url="/loginPage?auth=fail" />
        <sec:logout invalidate-session="true" logout-url="/logout"
                logout-success-url="/logoutPage" />
    </sec:http>
 
    <!-- Define some example users and admins who have role based access to 
    the application. In a real world scenario this would be linked with a user 
    credentials database or a custom authentication provider. Some examples: 
    1) http://krams915.blogspot.in/2012/01/spring-security-31-implement_1244.html 
    2) http://krams915.blogspot.in/2010/12/spring-security-mvc-integration-using_26.html -->
    <sec:authentication-manager>
        <sec:authentication-provider>
            <sec:user-service>
         
                <sec:user name="user" password="user" authorities="ROLE_USER" />
                <sec:user name="admin" password="admin" authorities="ROLE_USER,ROLE_ADMIN" />
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>
</beans>